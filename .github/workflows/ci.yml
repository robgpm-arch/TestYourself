name: ci

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  pull-requests: write

env:
  NODE_VERSION: "20"
  FIREBASE_PROJECT_ID: "testyourself-80a10"
  FIREBASE_SITE_ID: "testyourself-80a10"

jobs:
  # ================================================================
  # üîß Build Job
  # ================================================================
  build:
    runs-on: ubuntu-latest
    outputs:
      build-dir: dist
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Ensure detect-secrets baseline exists
        run: |
          echo "üõ° Checking for .secrets.baseline..."
          if [ ! -f ".secrets.baseline" ]; then
            echo "‚ö†Ô∏è  No .secrets.baseline found. Generating temporary baseline..."
            python3 -m pip install --user detect-secrets
            python3 -m detect_secrets scan > .secrets.baseline
            echo "‚úÖ Generated new .secrets.baseline (temporary for CI)."
          else
            echo "‚úÖ Existing .secrets.baseline found."
          fi

      - name: Typecheck & Lint
        run: |
          npm run type-check || true
          npm run lint || true

      - name: Build app
        run: npm run build

  # ================================================================
  # üöÄ Production Deploy (push to main)
  # ================================================================
  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Auth to Google (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.DEPLOYER_SA }}

      - name: Install Firebase CLI
        run: npm i -g firebase-tools

      - name: Deploy Hosting (LIVE)
        run: |
          firebase use $FIREBASE_PROJECT_ID
          firebase deploy --only hosting --project $FIREBASE_PROJECT_ID

      - name: Print production URL
        run: |
          echo "üåê Production URL: https://testyourself.app"
          curl -I https://testyourself.app || true

  # (No PR preview/cleanup ‚Äî push to main only)
