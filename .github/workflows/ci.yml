name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  pull-requests: write

env:
  NODE_VERSION: "20"
  FIREBASE_PROJECT_ID: "testyourself-80a10"
  FIREBASE_SITE_ID: "testyourself-80a10"

jobs:
  # ================================================================
  # 🔧 Shared Build Job
  # ================================================================
  build:
    runs-on: ubuntu-latest
    outputs:
      build-dir: dist
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Ensure detect-secrets baseline exists
        run: |
          echo "🛡 Checking for .secrets.baseline..."
          if [ ! -f ".secrets.baseline" ]; then
            echo "⚠️  No .secrets.baseline found. Generating temporary baseline..."
            python3 -m pip install --user detect-secrets
            python3 -m detect_secrets scan > .secrets.baseline
            echo "✅ Generated new .secrets.baseline (temporary for CI)."
          else
            echo "✅ Existing .secrets.baseline found."
          fi

      - name: Typecheck & Lint
        run: |
          npm run type-check || true
          npm run lint || true

      - name: Build app
        run: npm run build

  # ================================================================
  # 🚀 Production Deploy (push to main)
  # ================================================================
  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Auth to Google (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.DEPLOYER_SA }}

      - name: Install Firebase CLI
        run: npm i -g firebase-tools

      - name: Deploy Hosting (LIVE)
        run: |
          firebase use $FIREBASE_PROJECT_ID
          firebase deploy --only hosting --project $FIREBASE_PROJECT_ID

      - name: Print production URL
        run: |
          echo "🌐 Production URL: https://testyourself.app"
          curl -I https://testyourself.app || true

  # ================================================================
  # 🔄 PR Preview Deploy
  # ================================================================
  preview:
    if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' && github.event.pull_request.head.repo.full_name == github.repository }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Auth to Google (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.DEPLOYER_SA }}

      - name: Install Firebase CLI
        run: npm i -g firebase-tools

      - name: Deploy preview channel
        id: preview
        run: |
          CHANNEL="pr-${{ github.event.number }}"
          firebase hosting:channel:deploy "$CHANNEL" \
            --project "$FIREBASE_PROJECT_ID" \
            --site "$FIREBASE_SITE_ID" \
            --expires 7d \
            --json > preview.json
          URL=$(node -e "console.log(JSON.parse(require('fs').readFileSync('preview.json','utf8')).result?.url || '')")
          echo "url=$URL" >> "$GITHUB_OUTPUT"

      - name: Comment preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const url = `${{ steps.preview.outputs.url }}`;
            if (!url) return;
            const body = [
              `✅ Preview deployed: **${url}**`,
              ``,
              `> Auto-expires in 7 days. Re-deploys on each new commit.`,
            ].join("\n");
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });

      - name: Add Preview URL to job summary
        if: ${{ steps.preview.outputs.url != '' }}
        run: |
          echo "### ✅ [Preview deployed here](${{ steps.preview.outputs.url }})" >> $GITHUB_STEP_SUMMARY

  # ================================================================
  # 🧹 Auto Cleanup when PR Closed or Merged
  # ================================================================
  cleanup:
    if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' }}
    runs-on: ubuntu-latest
    steps:
      - name: Auth to Google (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.DEPLOYER_SA }}

      - name: Install Firebase CLI
        run: npm i -g firebase-tools

      - name: Delete preview channel
        run: |
          CHANNEL="pr-${{ github.event.number }}"
          firebase hosting:channel:delete "$CHANNEL" \
            --project "$FIREBASE_PROJECT_ID" \
            --site "$FIREBASE_SITE_ID" \
            --force || true
